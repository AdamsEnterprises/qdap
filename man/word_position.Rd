% Generated by roxygen2 (4.0.2): do not edit by hand
\name{word_position}
\alias{word_position}
\title{Word Position}
\usage{
word_position(text.var, match.terms, digits = 2, percent = TRUE,
  zero.replace = 0, ...)
}
\arguments{
\item{text.var}{The text variable.}

\item{match.terms}{A character vector of quoted terms to find the positions of.}

\item{digits}{Integer; number of decimal places to round when printing.}

\item{percent}{logical.  If \code{TRUE} output given as percent.  If
\code{FALSE} the output is proportion.}

\item{zero.replace}{Value to replace 0 values with.}

\item{\ldots}{Currently ignored.}
}
\value{
Returns a list, of class "word_position", of data frames and
information regarding word positions:
\item{raw}{raw word position counts in long format (may be more useful for plotting)}
\item{count}{integer word position counts}
\item{prop}{proportional word position counts; proportional to
each total word uses}
\item{rnp}{a character combination data frame of count and proportional}
\item{zero_replace}{value to replace zeros with; mostly internal use}
\item{percent}{The value of percent used for plotting purposes.}
\item{digits}{integer value of number of digits to display; mostly internal
use}
}
\description{
Find counts of the positioning of words within a sentence.
}
\note{
Default printing is a heatmap plot.
}
\examples{
\dontrun{
position <- with(DATA, word_position(sent_detect(state), Top25Words))
position
lview(position)
plot(position)
scores(position)
preprocessed(position)
counts(position)
proportions(position)
plot(proportions(position))

topwords <- freq_terms(text.var, top = top, at.least = at.least,
    stopwords = stopwords)[[1]]
word_position(pres_debates2012[["dialogue"]], topwords)
plot(word_position(pres_debates2012[["dialogue"]], topwords), FALSE)
plot(word_position(pres_debates2012[["dialogue"]], topwords), TRUE, scale=FALSE)

wordlist <- c("tax", "health", "rich", "america", "truth", "money", "cost",
    "governnor", "president", "we", "job", "i", "you", "because",
    "our", "years")

word_position(pres_debates2012[["dialogue"]], wordlist)

## BY VARIABLES
library(gridExtra)
pres_deb_by_time <- with(pres_debates2012, split(dialogue, time))
out1 <-lapply(pres_deb_by_time, word_position, wordlist)
do.call("grid.arrange", c(lapply(out1, plot), ncol=1))

pres_deb_by_person <- with(pres_debates2012, split(dialogue, person))
out2 <-lapply(pres_deb_by_person, word_position, wordlist)
plots <- lapply(names(out2), function(x) plot(out2[[x]]) + ggtitle(x))
do.call("grid.arrange", c(plots, ncol=2))
}
}
\keyword{position}
\keyword{word}

